1.1
1. e m a c s SPACE e x e r 1 . h t m l Enter
2. M-< C-s U T F - 8 Enter
3. M-< C-s I n s t r u c t i o n s Enter C-n
4. M-< C-s H T M L Enter
5. M-< C-s a r r o w Enter M-b
6. C-e
7. C-a
8. M-<
9. Nope
10. This is the best way I could think of currently.
11. C-x C-c

1.2
1. e m a c s SPACE e x e r 2 . h t m l Enter
2. M-g g 1 8 Enter C-k
3. C-s D E L Enter C-a C-k
4. C-s < ! C-s Enter C-a C-M-k
5. C-s < ! Enter C-b C-b M-z >

1.3
1. e m a c s SPC e x e r 3 . h t m l Enter
2. C-s SPC 1 M % SPC 3 7 Enter SPC SPC Enter
3. M-< U T Enter C-b C-u 4 C-d S - A S  C I I
4. C-s < o Enter C-e Enter
5. C-x C-s C-x C-c

1.4
1. Executed as described in spec
2. e m a c s SPC e x e r 4 . h t m l
3. C-s < ! - Enter C-a C-f M-z > M-< C-s < p C-s Enter
   C-p C-p C-y
4. C-s < ! Enter C-b C-b M-z > M-< C-s < u Enter C-p C-p
   C-y C-s < ! - Enter C-b C-b C-@ C-n C-n C-n C-w M-<
   C-s < p > S Enter C-p C-p C-y DEL C-p C-d C-p C-d
   C-s < ! Enter C-b C-b M-z > M-< C-s < p > s h Enter
   C-e C-b C-b C-b C-b C-b C-y
5. M-< C-s --- C-s Enter C-a C-@ M-> C-w
6. C-_
7. M-< C-s --- C-s Enter C-a < ! - - M-> - - >
8. M-< C-s < o l M-% < 0 l Enter SPC SPC SPC SPC SPC SPC SPC
9. check as mentioned in the spec.

1.5
-*- mode: compilation; default-directory: "~/junk/" -*-
Compilation started at Thu Mar 31 12:35:47

gcc hello.c -o hello

Compilation finished at Thu Mar 31 12:35:47

1.6
1. C-x b * s c r a t c h * Enter
2. e v a l ( r a n d o m ) C-j
3. ( s e t q SPC x ( r a n d o m ) C-j )
   ( s e t q SPC y ( r a n d o m ) C-j )
   ( s e t q SPC z ( r a n d o m ) C-j )
4. ( * SPC x SPC y SPC z )
   The result is wrong and even has fewer digits then some
   of the x, y, z's
5. M-: ( * SPC x SPC y SPC z)
   The first part of the result is the same as (*x y z), but
   it has two other long sequences of number and alphabets with
   # at the beginning followed.
6. No. They have certain functionss for generate pseudo-random
   numbers.
